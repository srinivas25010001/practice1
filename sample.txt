
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp-deployment
  labels:
    app: nodeapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodeapp
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      containers:
      - name: nodeserver
        image: thetips4you/nodeapp:latest
        ports:
        - containerPort: 3000


---

apiVersion: v1
kind: Service
metadata:
  name: nodeapp-service
spec:
  selector:
    app: nodeapp
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 3000
    nodePort: 31110


FROM debian:bullseye AS apache

# Install Apache, Node.js, and dependencies
RUN apt-get update && apt-get install -y \
    apache2 apache2-utils curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean

# Set working directory
WORKDIR /usr/src/app

# Copy package.json and install dependencies
COPY package.json ./
RUN npm install --only=production && npm cache clean --force

# Copy application files
COPY . .

# Enable Apache modules
RUN a2enmod proxy proxy_http rewrite

# Copy custom Apache configuration
COPY httpd.conf /etc/apache2/sites-available/000-default.conf

# Expose port 80 for Apache
EXPOSE 80

# Start Node.js and Apache
CMD ["sh", "-c", "node /usr/src/app/server.js & apachectl -D FOREGROUND"]




FROM node:18.17.0-bullseye-slim AS node
ENV ENV=production
WORKDIR /usr/src/app
COPY package.json ./
RUN npm install && npm ci --only=production --omit=dev && npm cache clean --force
COPY . .
EXPOSE 80
RUN chmod a+x /usr/src/app/startup.sh
ENTRYPOINT ["/usr/src/app/startup.sh"]

//httpd.conf 

ServerName localhost

# Enable Reverse Proxy
ProxyRequests Off
ProxyPreserveHost On

# Node.js App Proxy
<VirtualHost *:80>
    ProxyPass "/" "http://localhost:3000/"
    ProxyPassReverse "/" "http://localhost:3000/"
    
    ErrorLog /var/log/apache2/error.log
    CustomLog /var/log/apache2/access.log combined
</VirtualHost>


